[
["index.html", "Linking experimental measures of personality to free-living space-use in red knots 1 Introduction 1.1 Attribution 1.2 Data", " Linking experimental measures of personality to free-living space-use in red knots Pratik R Gupte 2019-12-03 1 Introduction This is the bookdown version of a project in preparation that links high-resolution tracking data from individual red knots Calidris canutus islandica to fine-scale experimental behaviour measurements in captivity, and aims to explore whether free-living space-use can be predicted by lab assays of consistent individual differences. 1.1 Attribution Please contact the following before cloning or in case of interest in the project. Pratik Gupte (author and maintainer) PhD student, GELIFES – University of Groningen Guest researcher, COS – NIOZ p.r.gupte@rug.nl Nijenborgh 7/5172.0583 9747AG Groningen Allert Bijleveld (PI): allert.bijleveld@nioz.nl Project information: https://www.nioz.nl/en/about/cos/coastal-movement-ecology/shorebird-tracking Selin Ersoy (collab): selin.ersoy@nioz.nl 1.2 Data The data used in this work are not publicly available. Contact PI Allert Bijleveld for data access. "],
["introduction-to-getting-data.html", "2 Introduction to getting data 2.1 Prepare watlasUtils and other libraries 2.2 Read in tag deployment data 2.3 Get data and save locally", " 2 Introduction to getting data This section focusses on accessing and downloading WATLAS data. This is done using functions in the WATLAS Utilities package. 2.1 Prepare watlasUtils and other libraries # install the package watlasUtils from master branch using the following # install.packages(&quot;devtools&quot;) library(devtools) # devtools::install_github(&quot;pratikunterwegs/watlasUtils&quot;) library(watlasUtils) # CRAN libraries library(data.table) library(ggplot2) library(ggthemes) library(purrr) library(glue) 2.2 Read in tag deployment data # read deployment data from local file in data folder tag_info &lt;- fread(&quot;data/data2018/SelinDB.csv&quot;) # filter out NAs in release date and time tag_info &lt;- tag_info[!is.na(Release_Date) &amp; !is.na(Release_Time),] # make release date column as POSIXct tag_info[,Release_Date := as.POSIXct(paste(Release_Date, Release_Time, sep = &quot; &quot;), format = &quot;%d.%m.%y %H:%M&quot;, tz = &quot;CET&quot;)] # check new release date column head(tag_info$Release_Date) ## [1] &quot;2018-09-14 20:00:00 CEST&quot; ## [2] &quot;2018-09-13 15:30:00 CEST&quot; ## [3] &quot;2018-09-14 20:00:00 CEST&quot; ## [4] &quot;2018-09-13 18:30:00 CEST&quot; ## [5] &quot;2018-08-11 15:00:00 CEST&quot; ## [6] &quot;2018-08-16 18:04:00 CEST&quot; (#fig:plot_release_schedule)Knots released per week of 2018. 2.3 Get data and save locally # read in database access parameters from a local file data_access &lt;- fread(&quot;data/access_params.txt&quot;) # create a data storage file if not present # use the getData function from watlasUtils on the tag_info data frame # this is placed inside a pmap wrapper to automate access for all birds if(!dir.exists(&quot;data/data2018&quot;)) { dir.create(&quot;data/data2018&quot;) } pmap(tag_info[,.(Toa_Tag, Release_Date)], function(Toa_Tag, Release_Date){ prelim_data &lt;- watlasUtils::funcGetData(tag = Toa_Tag, tracking_time_start = as.character(Release_Date), tracking_time_end = &quot;2018-10-31&quot;, username = data_access$username, password = data_access$password) print(glue(&#39;tag {Toa_Tag} accessed with {nrow(prelim_data)} fixes&#39;)) fwrite(prelim_data, file = glue(&#39;data/data2018/{Toa_Tag}.csv&#39;)) }) "]
]
